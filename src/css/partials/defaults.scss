@import "utils/main";

/* Typography and Spacing Defaults
========================================================================== */

html {
  height: 100%; // if this needs to change back to min-height, leave a note as to why
  font-family: $gentona;
}

body {
  height: 100%; // if this needs to change back to min-height, leave a note as to why
  font-size: 14px;
  font-weight: 300;
  font-style: normal;

  @include breakpoint_lap() { font-size: 16px; }
  @include breakpoint_desk() { font-size: 18px; }
  @include breakpoint_wall() { font-size: 21px; }
}

ul {
  margin: 0;
  padding: 0;
}

p {
  margin: 1em 0;
  &:first-child { margin-top: 0; }
  &:last-child  { margin-bottom: 0; }
}

strong { font-weight: 500; }

em { font-style: italic; }

h1 {
  margin: (2em / 5) 0; // maths for font-size
  font-family: $quadon;
  font-weight: 100;
  font-size: 5em;
  text-transform: uppercase;
}

h2 {
  margin: (3em / 2.75) 0 (1em / 2.75) 0; // maths for font-size
  font-family: $quadon;
  font-weight: 100;
  font-size: 2.75em;
  line-height: 1.1em;
}

h3 {
  margin: (1em / 1.5) 0 (0.5em / 1.5) 0; // maths for font-size
  font-family: $gentona;
  font-weight: 700;
  font-size: 1.5em;
}

h4 {
  margin: (1em / 1.25) 0 (0.5em / 1.25) 0; // maths for font-size
  font-family: $gentona;
  font-weight: 500;
  font-size: 1.25em;
}

$table_border_style: 0.125em solid $gray1;

table {
  width: 100%;
  margin: 1em 0;
  outline: $table_border_style;

  tr {
    border-bottom: $table_border_style;

    &:first-child { border-top: $table_border_style; }

    th, td {
      padding: 0.5em;
      border-right: $table_border_style;
      overflow: hidden;

      &:last-child { border-right: none; }
    }

    th {
      padding: (0.5em / 0.8); // math for font-size
      background-color: $gray5;
      // border-color: $gray4;
      font-size: 0.8em;
      font-weight: 500;
      color: $white;
      text-align: center;
      text-transform: uppercase;
    }

    td { width: auto; }
  }
}

.page-container {
  height: 100%; // if this needs to change back to min-height, leave a note as to why
  background-color: $white;
}

.section {
  display: block;
  clear: both;
  position: relative;
  z-index: $stack_normal;
}

.center {
  position: relative;
  z-index: $stack-normal;
}

a {
  color: $sparta;
  font-weight: 400;
  text-decoration: none;
  padding: 0.0625em 0;
  border-bottom: 0.125em solid transparent;
  @include transition(color, border-bottom-color);
  @include transition-duration( $run, $run);
  @include transition-timing-function( ease-in-out, ease-in-out);

  &:hover {
    border-bottom-color: $sparta;
    color: $black;
  }
}

//\\//\\ BUTTONS //\\//\\//\\//\\
.button {
  margin: 1em 0;
  padding: 0.375em 1em;
  border: 0.125em solid;
  border-color: $black;
  @include border-radius(0.25em);
  display: table;
  font-size: 1em;
  font-weight: 300;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  letter-spacing: 0;
  color: $black;
  cursor: pointer;
  @include transform( scale(1));
  @include transition(border-color, background-color, letter-spacing, color, transform);
  @include transition-duration($run, $run, $run, $run, $run);
  @include transition-timing-function(ease-in-out, ease-in-out, ease-in-out, ease-in-out, ease-in-out);

  &:hover {
    border-color: $sparta;
    letter-spacing: 0.5px;
    color: $sparta;
    @include transform (scale(1.01));
  }

  &:first-child { margin-top: 0; }
  &:last-child { margin-bottom: 0; }

  // Button Types
  &.button-default {}

  &.button-inline { display: inline-block; }

  &.button-accent {
    background-color: $sparta;
    border-color: $sparta;
    font-weight: 500;
    color: $white;

    &:hover {
      background-color: $black;
      border-color: $sparta;
      color: $white;
    }
  }

  // Button Sizes
  &.inherit { font-size: 1em; }

  &.small {
    font-size: 0.8em;
    margin: (1em / 0.8) 0; // makes margins add up to 1em of parent font size.
    padding: (0.375em / 0.8) (1em / 0.8);
	  border: (0.125em / 0.8) solid;
		@include border-radius(0.25em);
  }

  &.large {
    font-size: 1.25em;
    margin: (1em / 1.25) 0; // makes margins add up to 1em of parent font size.
  }

  &.xlarge {
    width: 100%;
    font-size: 1.5em;
    margin: (1em / 1.5) 0; // makes margins add up to 1em of parent font size.
  }
}


//\\//\\ CLOSE-X //\\//\\//\\//\\
.close-box-x {
  width: $standard_spacing;
  height: $standard_spacing;
  border-bottom: none;
  position: fixed;
  top: 0;
  right: 0;
  z-index: $stack_positioned;
  background-color: $black;
  color: $gray2;
  text-decoration: none;
  display: block;
  cursor: pointer;
  @include transition(background-color);
  @include transition-duration($run);
  @include transition-timing-function(ease-in-out);

  &::before, &::after {
    width: 50%;
    height: 0.125em;
    position: absolute;
    top: 50%;
    left: 50%;
    content: "";
    background-color: $gray1;
    @include transition(background-color);
    @include transition-duration($run);
    @include transition-timing-function(ease-in-out);
  }

  &::before { @include transform(translate(-50%, -50%) rotate(45deg)); }
  &::after { @include transform(translate(-50%, -50%) rotate(-45deg)); }

  &:hover {
    background-color: $gray5;

    &::before, &::after { background-color: $white; }

    .fa { color: $white; }
  }

  .fa {
    width: ((($standard_spacing / 3) * 2) / 2); // math for font-size
    height: ((($standard_spacing / 3) * 2) / 2); // math for font-size
    margin: ((($standard_spacing / 12) * 2) / 2); // math for font-size
    display: none;
    visibility: hidden;
    font-size: (($standard_spacing / 3) * 2);
    color: $gray1;
    @include transition(color);
    @include transition-duration($run);
    @include transition-timing-function(ease-in-out);
  }
}



//\\//\\ SEARCH BOXES //\\//\\//\\//\\
@mixin search_input($layout) {

  @if $layout == stacked {
    width: 100%;
    padding: ((0.375em + (0.375em / 2)) / 1.25) (0.75em / 1.25); // math for font size
    border-width: (0.375em / 1.25); // math for font size
    border-right-width: (0.375em / 1.25); // font size math
    border-bottom-width: 0;
    float: none;

  } @else {
    width: percentage(2 / 3);
    padding: (0.375em / 1.25) (0.75em / 1.25); // math for font size
    border-width: (0.375em / 1.25); // math for font size
    border-right-width: 0;
    border-bottom-width: (0.375em / 1.25); // font size math
    float: left;
  }
}

@mixin search_button($layout) {

  @if $layout == stacked {
    width: 100%;
    height: ($standard_spacing / 1.25); // font math
    padding: (0.375em / 1.25) 0; // math for font size
    border-width: (0.375em / 1.25); // math for font size
    font-size: 1.25em;
    line-height: (1.5em / 1.25); //font-math
    float: none;

  } @else {
    width: percentage(1 / 3);
    height: ($standard_spacing / 1); // math for font size
    padding: (0.375em / 1); // math for font size
    border-width: (0.375em / 1); // math for font size
    font-size: 1em;
    line-height: (1.5em / 1); //font-math
    float: right;
  }
}

.search-box {
  width: 100%;
  margin: 0;
  position: relative;
  background-color: transparent;

  form { width: 100%; }

  input {
    @include search_input(stacked);
    height: ($standard_spacing / 1.25); // font math
    margin: 0;
    border-style: solid;
    border-color: $sparta;
    outline: 0;
    font-size: 1.25em;
    line-height: 1em;
  }

  button {
    @include search_button(stacked);
    border-style: solid;
    border-color: $sparta;
    outline: 0;
    background-color: $sparta;
    color: $white;
    text-align: center;
    text-transform: uppercase;
    @include transition(background-color, letter-spacing);
    @include transition-duration($run, $run);
    @include transition-timing-function(ease-in-out, ease-in-out);

    &:hover {
      background-color: $black;
      letter-spacing: 0.75px;
    }

    .fa { margin-right: 0.25em; }
  }
}

.icon-fallback {
  text-decoration: none;
  display: none;
  visibility: hidden;
}



/* Utility Classes
========================================================================== */

/**
 * Force-clear floats
 */
.force:after {
  visibility: hidden;
  display: block;
  content: "";
  clear: both;
  height: 0;
}
* html .force             { zoom: 1; } /* IE6 */
*:first-child+html .force { zoom: 1; } /* IE7 */

.hide { display: none; }
